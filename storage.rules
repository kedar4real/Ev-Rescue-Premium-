rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Users can upload and manage their own profile images
    match /users/{userId}/profile.jpg {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Users can upload and manage their own profile images (any format)
    match /users/{userId}/profile.{fileExtension} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Emergency request images - users can upload, both user and provider can read
    match /emergencyRequests/{requestId}/{fileName} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        (resource.metadata.userId == request.auth.uid || 
         resource.metadata.providerId == request.auth.uid);
    }
    
    // Service history images - similar to emergency requests
    match /serviceHistory/{historyId}/{fileName} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        (resource.metadata.userId == request.auth.uid || 
         resource.metadata.providerId == request.auth.uid);
    }
    
    // Fleet vehicle images - only service providers can manage
    match /fleet/{vehicleId}/{fileName} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/serviceProviders/$(request.auth.uid));
    }
    
    // Charging station images - public read, authenticated upload
    match /chargingStations/{stationId}/{fileName} {
      allow read: if true; // Public access for station images
      allow create, update: if request.auth != null;
      allow delete: if false; // No deletion of station images
    }
    
    // Support ticket attachments - users can upload their own
    match /supportTickets/{ticketId}/{fileName} {
      allow read: if request.auth != null && 
        (resource.metadata.userId == request.auth.uid || 
         resource.metadata.assignedTo == request.auth.uid);
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        resource.metadata.userId == request.auth.uid;
    }
    
    // Chat media files - only participants can access
    match /conversations/{conversationId}/media/{fileName} {
      allow read, write: if request.auth != null && 
        (resource.metadata.userId == request.auth.uid || 
         resource.metadata.providerId == request.auth.uid);
    }
    
    // General file size and type restrictions
    match /{allPaths=**} {
      allow read, write: if false; // Default deny all
    }
  }
}
